rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user is accessing their own document
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Check if user is an admin
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection rules
    match /users/{userId} {
      // Anyone can read their own profile
      // Only admins can read other profiles
      allow read: if isUser(userId) || isAdmin();
      
      // Users can create their profile on sign up
      allow create: if isUser(userId);
      
      // Users can update their own profile
      // Admins can update any profile
      allow update: if isUser(userId) || isAdmin();
      
      // Only admins can delete user profiles
      allow delete: if isAdmin();
    }
    
    // Database connections rules
    match /connections/{connectionId} {
      // User can read their own connections
      // Admins can read all connections
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // User can create connections
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // User can update their own connections
      // Admins can update any connection
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // User can delete their own connections
      // Admins can delete any connection
      allow delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Query templates rules
    match /queryTemplates/{templateId} {
      // Templates can be read by their owner or if they're public
      // Admins can read all templates
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.isPublic == true || 
         isAdmin());
      
      // User can create templates
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // User can update their own templates
      // Admins can update any template
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // User can delete their own templates
      // Admins can delete any template
      allow delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // User activity logs
    match /activityLogs/{logId} {
      // User can read their own logs
      // Admins can read all logs
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // System can create logs
      // No direct client access for creation
      allow create: if false;
      
      // No updates allowed to logs
      allow update: if false;
      
      // Only admins can delete logs
      allow delete: if isAdmin();
    }
    
    // Default: deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
