# Task ID: 11
# Title: Implement Table Data Browser with TanStack Table
# Status: done
# Dependencies: 7, 9
# Priority: high
# Description: Create a data browser component to view, filter, and sort table data with pagination.
# Details:
1. Install TanStack Table: `npm install @tanstack/react-table`
2. Create Firebase Cloud Function to fetch table data with pagination
3. Implement DataBrowser component using TanStack Table
4. Add pagination controls with configurable page size
5. Implement column sorting functionality
6. Create column filtering UI for different data types
7. Add global search functionality
8. Implement row selection and bulk actions
9. Create column visibility toggle
10. Add data export functionality (CSV, Excel, JSON)
11. Implement row detail expansion for related data

# Test Strategy:
Test data browser with tables of various sizes. Verify pagination works correctly. Test sorting and filtering functionality. Verify export features generate correct output. Test performance with large datasets.

# Subtasks:
## 1. Install TanStack Table Library [done]
### Dependencies: None
### Description: Install TanStack Table, the modern React table library for building professional, fully-featured tables with server-side pagination, filtering, and sorting.
### Details:


## 2. Implement DataBrowser Component [done]
### Dependencies: None
### Description: Create a core DataBrowser component that leverages TanStack Table to display, filter, sort, and paginate table data fetched from the server. Implement advanced functionality such as column visibility toggle, column sorting, and column filtering.
### Details:


## 3. Create DataTable Wrapper Component [done]
### Dependencies: None
### Description: Develop a DataTable component that wraps the DataBrowser and adds a table selection dropdown. This component allows users to select which table to browse from a provided list and displays the data using DataBrowser.
### Details:


## 4. Implement Table Filtering Components [done]
### Dependencies: None
### Description: Implement reusable filter components for different data types (text, date range, number range, select, boolean) that can be used with the DataBrowser component.
### Details:


## 5. Update TableBrowser Page [done]
### Dependencies: None
### Description: Update the TableBrowser page to use the new DataTable component, ensuring proper integration with the database connection store and schema store.
### Details:


